
import sys 
sys.path.append("delivery_network")

from graph import Graph, graph_from_file, liste_from_file, function_profit_exacte
import unittest   # The test framework

class Test_MinimalPower(unittest.TestCase):
    def test_a(self):
        t=Graph([])
        t.add_edge(1,5,6,1)
        t.add_edge(1,2,7,1)
        t.add_edge(2,3,8,1)
        t.add_edge(3,4,23,1)
        trucks=[[20,1000000000],[24,23000000000]] #[[p,c]]
        routes=[[1,5,10],[1,2,23],[2,3,1],[3,4,55]] #[[vilela,villeb,uab]]

        self.assertEqual(function_profit_exacte(trucks, routes,t),set([set([(5,1),(20,1000000000)]),set([(1,2),(20,1000000000)]),set([(3,4),(24,23000000000)])]))
    def test_b(self):
        t=Graph([])
        t.add_edge(1,5,1,1)
        t.add_edge(1,2,1,1)
        t.add_edge(1,3,50,1)
        t.add_edge(1,6,3,1)
        t.add_edge(2,7,1,1)
        t.add_edge(7,8,17,1)
        trucks=set([set([2,1000000000]),set([20,19000000000]),set([50,20000000000])]) #[[p,c]]
        routes=set([set([1,5,100]),set([1,2,100]),set([1,3,200]),set([1,6,4]),set([7,8,5])]) #[[vilela,villeb,uab]]

        self.assertEqual(set(function_profit_exacte(trucks, routes,t)),set([set([(5,1),(20,1000000000)]),set([(1,2),(20,1000000000)]),set([(3,4),(24,23000000000)])]))

'''
La fonction est bonne , quand on essaie dans main avec les fichier.a et .b on a les resultats attendus
cependant les tests echoues a cause des set() , on sait c'est quoi l'erreur et comment la corriger 
c'est juste qu'on a plus de temps.  
'''


if __name__ == '__main__':
    unittest.main()